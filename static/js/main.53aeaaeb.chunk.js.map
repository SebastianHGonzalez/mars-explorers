{"version":3,"sources":["mars-explorer/api/schemas.js","mars-explorer/api/index.js","mars-explorer/config/index.js","mars-explorer/ducks/rovers.js","mars-explorer/ducks/utils.js","mars-explorer/ducks/index.js","mars-explorer/createStore.js","mars-explorer/pages/rover-profile/index.jsx","mars-explorer/pages/rovers/StatusBadge.jsx","mars-explorer/pages/rovers/RoversListItem.jsx","mars-explorer/pages/rovers/index.jsx","mars-explorer/pages/about/index.jsx","mars-explorer/pages/feed/index.jsx","mars-explorer/pages/not-found/index.jsx","mars-explorer/routes.jsx","mars-explorer/index.jsx","App.js","serviceWorker.js","index.js"],"names":["camera","schema","Entity","idAttribute","rover","cameras","photo","responseSchema","Object","rovers","Array","photos","axios","create","baseURL","fetch","get","params","api_key","then","response","data","normalize","saga","types","request","start","success","error","actions","type","_ref","entities","objectSpread","regenerator_default","a","wrap","_context","prev","next","all","takeLatest","stop","_marked","_context2","put","t0","t1","call","t2","sent","t3","t4","_marked2","createEntityReducer","entityName","combineReducers","ids","state","arguments","length","undefined","action","from","Set","concat","keys","byId","fetching","roverActions","selectors","createSelector","_ref2","_ref3","map","id","mark","rootSaga","roverSaga","reducer","createMarsExplorerStore","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","run","RoverProfile","react_default","createElement","StatusBadge","styled","span","attrs","style","backgroundColor","children","_templateObject","displayName","ProfileRow","li","RoversListItem_templateObject","Heading","div","_templateObject2","Body","p","_templateObject3","Photo","_templateObject4","RoversListItem","name","status","total_photos","landing_date","max_sol","onClick","rovers_StatusBadge","moment","fromNow","toLocaleString","connect","dispatch","console","log","useEffect","react","rovers_RoversListItem","assign","key","About","Feed","NotFound","redirectTo","afterSeconds","_useState","useState","_useState2","slicedToArray","redirect","setRedirect","timer","setTimeout","clearTimeout","react_router","to","MarsExplorerRoutes","react_router_dom","path","component","RoverProfilePage","RoversPage","AboutPage","exact","FeedPage","render","not_found","RootStyles","mars_explorer_templateObject","MarsExplorer","es","routes","App","mars_explorer","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53aeaaeb.chunk.js","sourcesContent":["import { schema } from \"normalizr\";\n\nexport const camera = new schema.Entity(\"cameras\", {}, { idAttribute: \"name\" });\n\nexport const rover = new schema.Entity(\"rovers\", {\n  cameras: [camera]\n});\n\nexport const photo = new schema.Entity(\"photos\", {\n  camera,\n  rover\n});\n\nexport const responseSchema = new schema.Object({\n  rovers: new schema.Array(rover),\n  photos: new schema.Array(photo)\n});\n\nexport default responseSchema;\n","import { create } from \"axios\";\nimport { normalize } from \"normalizr\";\n\nimport { NASA_BASE_URL, NASA_API_KEY } from \"mars-explorer/config\";\nimport schema from \"mars-explorer/api/schemas\";\n\nconst axios = create({\n  baseURL: NASA_BASE_URL\n});\n\nexport const rovers = {\n  fetch: () =>\n    normalizeResponse(\n      axios.get(\"/rovers\", {\n        params: {\n          api_key: NASA_API_KEY\n        }\n      })\n    )\n};\n\nfunction normalizeResponse(axiosResponse) {\n  return axiosResponse\n    .then(response => response.data)\n    .then(data => normalize(data, schema));\n}\n","export const NASA_API_KEY = \"DEMO_KEY\";\n\nexport const NASA_BASE_URL = \"https://api.nasa.gov/mars-photos/api/v1/\";\n","import { all, takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { rovers } from \"mars-explorer/api\";\n\nexport const types = {\n  fetch: {\n    request: \"rovers/fetch/request\",\n    start: \"rovers/fetch/start\",\n    success: \"rovers/fetch/success\",\n    error: \"rovers/fetch/error\"\n  }\n};\n\nexport const actions = {\n  fetch: {\n    request: () => ({ type: types.fetch.request }),\n    start: () => ({ type: types.fetch.start }),\n    success: ({ entities }) => ({\n      type: types.fetch.success,\n      ...entities\n    }),\n    error: () => ({ type: types.fetch.error })\n  }\n};\n\nexport function* saga() {\n  yield all([takeLatest(types.fetch.request, fetch)]);\n}\n\nfunction* fetch() {\n  yield put(actions.fetch.start());\n\n  try {\n    yield put(actions.fetch.success(yield call(rovers.fetch)));\n  } catch (e) {\n    yield put(actions.fetch.error(e));\n  }\n}\n","import { combineReducers } from \"redux\";\n\nexport function createEntityReducer(entityName) {\n  function ids(state = [], action) {\n    if (action[entityName]) {\n      return Array.from(new Set(state.concat(Object.keys(action[entityName]))));\n    }\n    return state;\n  }\n\n  function byId(state = {}, action) {\n    if (action[entityName]) {\n      return {\n        ...state,\n        ...action[entityName]\n      };\n    }\n\n    return state;\n  }\n\n  function fetching(state = false, action) {\n    switch (action.type) {\n      case `${entityName}/fetch/start`:\n        return true;\n      case `${entityName}/fetch/success`:\n      case `${entityName}/fetch/error`:\n        return false;\n      default:\n        return state;\n    }\n  }\n\n  return combineReducers({\n    ids,\n    byId,\n    fetching\n  });\n}\n","import { combineReducers } from \"redux\";\nimport { all } from \"redux-saga/effects\";\nimport { createSelector } from \"reselect\";\n\nimport {\n  actions as roverActions,\n  saga as roverSaga\n} from \"mars-explorer/ducks/rovers\";\nimport { createEntityReducer } from \"mars-explorer/ducks/utils\";\n\nexport const actions = {\n  rovers: roverActions\n  // TODO: add actions\n};\n\nexport const selectors = {};\nselectors.rovers = {};\nselectors.rovers.state = state => state.rovers;\nselectors.rovers.ids = createSelector(\n  selectors.rovers.state,\n  ({ ids }) => ids\n);\nselectors.rovers.byId = createSelector(\n  selectors.rovers.state,\n  ({ byId }) => byId\n);\nselectors.rovers.fetching = createSelector(\n  selectors.rovers.state,\n  ({ fetching }) => fetching\n);\nselectors.rovers.all = createSelector(\n  selectors.rovers.ids,\n  selectors.rovers.byId,\n  (ids, byId) => ids.map(id => byId[id])\n);\n\nexport const saga = function* rootSaga() {\n  yield all([\n    roverSaga()\n    // TODO: Add sagas\n  ]);\n};\n\nexport const reducer = combineReducers({\n  photos: createEntityReducer(\"photos\"),\n  rovers: createEntityReducer(\"rovers\"),\n  cameras: createEntityReducer(\"cameras\")\n  // TODO: Add reducers\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { reducer as rootReducer, saga as rootSaga } from \"mars-explorer/ducks\";\n\nexport default function createMarsExplorerStore() {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middleware = [sagaMiddleware];\n\n  const store = createStore(\n    rootReducer,\n    composeWithDevTools(\n      applyMiddleware(...middleware)\n      // other store enhancers if any\n    )\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n","import React from \"react\";\n\nconst RoverProfile = () => <h1>Rover profile</h1>\n\nexport default RoverProfile;\n","import styled from \"styled-components\";\n\nconst StatusBadge = styled.span.attrs(({ children }) => ({\n  style: { backgroundColor: children === \"active\" ? \"green\" : \"red\" }\n}))`\n  color: white;\n  padding: 0.2rem 0.5rem;\n  border-radius: 0.5rem;\n`;\n\nStatusBadge.displayName = \"StatusBadge\";\n\nexport default StatusBadge;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\n\nimport StatusBadge from \"mars-explorer/pages/rovers/StatusBadge\";\n\nconst ProfileRow = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-template-areas: \"photo heading\" \"photo info\";\n  cursor: pointer;\n  padding: 1rem;\n  gap: 0 1rem;\n\n  :hover {\n    background-color: lightgrey;\n  }\n`;\nconst Heading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  grid-area: heading;\n  font-weight: bold;\n`;\nconst Body = styled.p`\n  grid-area: info;\n  line-height: 1.5rem;\n`;\nconst Photo = styled.div`\n  place-self: center;\n  grid-area: photo;\n`;\n\nconst RoversListItem = ({\n  name,\n  status,\n  total_photos,\n  landing_date,\n  max_sol,\n  onClick\n}) => (\n  <ProfileRow onClick={onClick}>\n    <Photo>photo</Photo>\n    <Heading>\n      <span>{name}</span>\n      <StatusBadge>{status}</StatusBadge>\n    </Heading>\n    <Body>\n      Landed <span>{moment(landing_date).fromNow()}</span>.<br />\n      Captured <span>{total_photos.toLocaleString()}</span> photos.\n      <br />\n      Saw <span>{max_sol.toLocaleString()}</span> suns.\n      <br />\n    </Body>\n  </ProfileRow>\n);\n\nexport default RoversListItem;\n","import React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { actions, selectors } from \"mars-explorer/ducks\";\nimport RoversListItem from \"mars-explorer/pages/rovers/RoversListItem\";\n\nconst Rovers = ({ fetch, fetching, rovers, onClick }) => {\n  useEffect(fetch, [fetch]);\n\n  return (\n    <Fragment>\n      <ul>\n        {rovers.map(rover => (\n          <RoversListItem\n            key={rover.id}\n            {...rover}\n            onClick={() => onClick(rover)}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    fetching: selectors.rovers.fetching(state),\n    rovers: selectors.rovers.all(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onClick: rover => {\n      console.log(rover);\n    },\n    fetch: () => {\n      dispatch(actions.rovers.fetch.request());\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Rovers);\n","import React from \"react\";\n\nconst About = () => <h1>about page</h1>\n\nexport default About;\n","import React from \"react\";\n\nconst Feed = () => <h1>Feed</h1>;\n\nexport default Feed;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst NotFound = ({ redirectTo, afterSeconds }) => {\n  const [redirect, setRedirect] = useState(\"\");\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setRedirect(redirectTo);\n    }, afterSeconds * 1000);\n\n    return () => clearTimeout(timer);\n  }, [redirectTo, afterSeconds]);\n\n  if (redirect && afterSeconds) {\n    return <Redirect to={redirect} />;\n  }\n\n  return (\n    <Fragment>\n      <h1>404 page not found</h1>\n      {redirectTo && afterSeconds && <h2>Redirecting...</h2>}\n    </Fragment>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport RoverProfilePage from \"mars-explorer/pages/rover-profile\";\nimport RoversPage from \"mars-explorer/pages/rovers\";\nimport AboutPage from \"mars-explorer/pages/about\";\nimport FeedPage from \"mars-explorer/pages/feed\";\nimport NotFound from \"mars-explorer/pages/not-found\";\n\nconst MarsExplorerRoutes = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/rovers/:id\" component={RoverProfilePage} />\n      <Route path=\"/rovers\" component={RoversPage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route exact path=\"/\" component={FeedPage} />\n      <Route\n        path=\"/\"\n        render={() => <NotFound redirectTo=\"/rovers\" afterSeconds={5} />}\n      />\n    </Switch>\n  </Router>\n);\n\nexport default MarsExplorerRoutes;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport createStore from \"mars-explorer/createStore\";\nimport MarsExplorerRoutes from \"mars-explorer/routes\";\n\nconst RootStyles = styled.div`\n  font-family: sans-serif;\n  ul {\n    list-style: none;\n    padding: 0;\n  }\n`;\n\nconst MarsExplorer = () => (\n  <RootStyles>\n    <Provider store={createStore()}>\n      <MarsExplorerRoutes />\n    </Provider>\n  </RootStyles>\n);\n\nexport default MarsExplorer;\n","import React from \"react\";\n\nimport MarsExplorer from \"mars-explorer\";\n\nfunction App() {\n  return <MarsExplorer />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}